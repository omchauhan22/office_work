function  getRecord(){
		
		$draw = intval($this->input->get("draw"));
		$start = intval($this->input->get("start"));
		$length = intval($this->input->get("length"));

		$tbl['user_data'] = $this->log_data_model->getAlluser();
		$comp_start_time = $this->log_data_model->comp_time_config();
		$emp['id'] = $this->input->post('uname') != '' ? $this->input->post('uname') : '';
		$emp['from_date'] = $this->input->post('flogdate') != '' ? date('Y-m-d',strtotime($this->input->post('flogdate'))) : date('Y-m-d');
		$emp['to_date'] = $this->input->post('tlogdate') != '' ? date('Y-m-d',strtotime($this->input->post('tlogdate'))) : date('Y-m-d');
		$user_data = $this->log_data_model->get_User_name($emp['id']);
		$response = $this->log_data_model->finalUserLog($emp);
		$total = count($response);
		$i=1;

		$null_time = '00:00:00';
			foreach($response as $val){

				if($val['end_time'] != NULL && $val['end_time'] != '' && $val['end_time'] != '0000-00-00 00:00:00'){
					 $end_time = $val['end_time'];
				}else{
					 $end_time =  date('Y-m-d',strtotime($val['start_time'])); // change 03-12-2018
					 if(strtotime(date('Y-m-d H:i:s')) < strtotime($end_time.' 23:59:59')){
					 	$end_time = date('Y-m-d H:i:s',strtotime($end_time.' '.date('H:i:s'))); 
					 }else{
					 	$end_time = date('Y-m-d H:i:s',strtotime($end_time.' 23:59:59')); 
					 }
				}			
				$tt = $this->toSeconds($this->dateTimeToTime($val['start_time'],$end_time));

				$task_time=0;
				$task_data = $this->log_data_model->GetAllUserTaskDetail($val['uid'],$val['start_time']);
				$leave_data = $this->log_data_model->get_all_User_leave_data($val['uid']);
				if(!empty($task_data)){
					foreach ($task_data as $get_time_value) {
							$date_s = explode(" ",$get_time_value['date_started']);
							$date_Ss = $date_s[0];
						if($get_time_value['date_ended']!='0000-00-00 00:00:00' && $date_ss == date($val[$i]['start_time'])  ){
							$task_time += intval($this->toSeconds($this->dateTimeToTime($get_time_value['date_started'],$get_time_value['date_ended'])));
						}else{
							$task_time += intval($this->toSeconds($this->dateTimeToTime($get_time_value['date_started'],date('Y-m-d H:i:s'))));
						}
					}
				}	
				if(!empty($leave_data)) {
					foreach($leave_data as $key => $value) {
						$msg = 'Half Day';
					}
					$data['No.'] = ++$l;
					$data['Name'] = $val['username'];				
					$data['Date'] = date('d/m/Y',strtotime($val['log_date']));
					$starttime = explode(" ",$val['start_time']);
					$data['start_time'] = date('h:i:s A',strtotime($starttime[1]));
					$res = $msg;
					$diff1 = 0;
				} else{
					$data['No.'] = ++$l;
					$data['Name'] = $val['username'];				
					$data['Date'] = date('d/m/Y',strtotime($val['log_date']));
					$starttime = explode(" ",$val['start_time']);
					$data['start_time'] = date('h:i:s A',strtotime($starttime[1]));
				
					$checkTime1 = strtotime($comp_start_time->start_time);
					$loginTime1 = strtotime($starttime[1]);
					$diff1 = $loginTime1 - $checkTime1;
					$res = $this->log_data_model->alert_message($starttime[1]);
				}
								
				if($diff1 > 0)
				{
					if($res == 'On time'){
						$data['morning_message'] = $res;
					}else if($res == 'Late!'){
						$data['morning_message'] = $res;
					} else {
						$data['morning_message'] = 'Too Late';
					}
				}
				else if($res == 'Half Day')
				{
					$data['morning_message'] = $res;	
				}
				else
				{
					$data['morning_message']  = 'On time';
				}
				$data['working_hours'] 	= $this->toTime($task_time);
				if($val['lunch_start'] != '' && $val['lunch_out'] != '' )
				{
					$starttimelunch = explode(" ",$val['lunch_start']);
					$finishtimelunch = explode(" ",$val['lunch_out']);
					$data['lunch_start'] = getTimeFormat($starttimelunch[1],'h:i:s A');
					$data['lunch_finish'] = getTimeFormat($finishtimelunch[1],'h:i:s A');
					$checkTime = strtotime($data['lunch_finish']);
					$loginTime = strtotime($data['lunch_start']); 
					$diff = $checkTime - $loginTime;
					$msg = $diff < 3600 ? 'On time!' : 'Late!';
					if($msg == 'On time!')
					{
						$data['lunch_message'] =  $msg;
					}
					else
					{
						$data['lunch_message'] = $msg;
					}
				}
				else
				{
					$data['lunch_start'] =  '--';
					$data['lunch_finish'] =  '--';
					$data['lunch_message']	= '--';	
				}
				$lunch_time = 0;
				if($val['lunch_start'] != '' && $val['lunch_out'] != NULL){
					if($val['lunch_out'] != NULL && $val['lunch_out'] != ''){
						$lend_time = $val['lunch_out'];
					}else{
						$lend_time = date('Y-m-d H:i:s');	
					}
					
					$tt = intval($tt) - intval($this->toSeconds($this->dateTimeToTime($val['lunch_start'],$lend_time)));
					$lunch_time = intval($this->toSeconds($this->dateTimeToTime($val['lunch_start'],$lend_time)));
					if($l == 10){
						
					}
				}
				$break_data = $this->log_data_model->get_break_data($val['uid'],$val['log_date']);
				$bt = intval(0);
				if(!empty($break_data)){
					foreach($break_data as $bval){
						if($bval['time_diff'] != NULL && $bval['time_diff'] != '' && $bval['time_diff'] != '00:00:00'){
							$bt += intval($this->toSeconds($bval['time_diff']));
						}else{
							$bt += intval($this->toSeconds($null_time));
						}
					}
					$data['break_time'] = '<a href="javascript:void(0)" onclick="showBreakTIme('.$val['uid'].',`'. $val['log_date'].'`)">'.$this->toTime($bt).'</a>';
				}else{
					$data['break_time'] = $null_time;
				}
				$total_working_time = $task_time+$lunch_time+$bt;
				$data['end_time'] = $val['end_time'] != NULL && $val['end_time'] != '' ? date('h:i:s A',strtotime($val['end_time'])) : $null_time;
				$data['total_time'] = $this->toTime($total_working_time);
				$userType = $this->session->userdata('USER_TYPE');
				if ($userType == getAdminUserType()) {
					$data['action'] = '<a class="fa fa-pencil-square-o" style="color: #000;" title="Edit" id="action_edit_' . $data['Name'] . '" href="javascript:void(0)" onclick="edit_time(\''.$data['Name'].'\',\''.$val['lunch_start'].'\',\''.$val['lunch_finish'].'\')"></a> | 
									  <a class="fa fa-trash" style="color: #000;" title="Remove" id="action_remove_' . $data['Name'] . '" onclick="remove_lunch_time(' . $data['Name'] . ',\'' . htmlspecialchars(json_encode($data), ENT_QUOTES, 'UTF-8') . '\')"></a>
									  <input type="hidden" id="user_id_' . $data['Name'] . '" value="' . $data['user_id'] . '">
									  <input type="hidden" id="lunch_start_' . $data['Name'] . '" value="' . htmlspecialchars($val['lunch_start']) . '">
									  <input type="hidden" id="lunch_finish_' . $data['Name'] . '" value="' . htmlspecialchars($val['lunch_out']) . '">
									  <button id="save_' . $data['Name'] . '" style="display: none;">Save</button>';
				} else {
					$data['action'] = ''; // No action for non-admin users
				}
				$data1[]=array($i,
						$data['Name'],
						$data['Date'],
						$data['start_time'],
						$data['morning_message'],
						$data['working_hours'],
						$data['lunch_start'],
						$data['lunch_finish'],
						$data['lunch_message'],	
						$data['break_time'],
						$data['end_time'],
						$data['total_time'],
						$data['action']
				);
   				$i++;
			} 
			$output = array(
				"draw" => $draw,
				"recordsTotal" =>$total,
				"recordsFiltered" =>$total,
				"data" => $data1
			);
			if(!empty($data1)){
				echo json_encode($output);
			} else {
				echo json_encode(array('data'=>''));
			}
	}
